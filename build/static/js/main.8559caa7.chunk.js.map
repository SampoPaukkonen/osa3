{"version":3,"sources":["components/SpecialNoteService.js","components/Person.js","components/Numbers.js","components/NameInput.js","components/NumberInput.js","components/PersonForm.js","components/Filter.js","components/Message.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseURL","SpecialNoteService","id","noteObject","axios","put","concat","then","response","data","newObject","post","delete","Person","_ref","person","group","setGroup","messager","_useState","useState","target","Object","slicedToArray","react_default","a","createElement","name","number","type","onClick","message","window","confirm","NoteService","_id","filter","sub","neutralizeTarget","Numbers","persons","setPersons","map","components_Person","key","NameInput","newName","handleNameChange","value","onChange","NumberInput","newNumber","handleNumberChange","PersonForm","addContact","onSubmit","components_NameInput","components_NumberInput","Filter","targetName","Message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorMessage","App","_useState2","useEffect","get","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setTargetName","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setMessage","displayMessage","setTimeout","displayErrorMessage","components_Message","components_ErrorMessage","components_Filter","event","components_PersonForm","preventDefault","includes","result","changedPerson","objectSpread","catch","error","components_Numbers","toLowerCase","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8559caa7.chunk.js","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n//Haetaan kaikki yhteystiedot\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n//Päivitetään yhteystietoja\r\nconst update = (id, noteObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, noteObject)\r\n    return request.then(response => response.data)\r\n}\r\n//Luodaan uusi yhteystieto\r\nconst create = newObject => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n//Poistetaan yhteystieto\r\nconst neutralize = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, update, create, neutralize}\r\n","import React, {useState} from 'react';\r\nimport NoteService from './SpecialNoteService'\r\nconst Person = ({person, group, setGroup, messager}) => {\r\n        //Asetetaan yhteystiedon henkilön tila\r\n        const [target] = useState(person)\r\n        //Voidaan poistaa yhteystieto, kun käyttäjä painaa nappia\r\n        const neutralizeTarget = (person, group, setGroup) => {\r\n                const request = NoteService.neutralize(target._id)\r\n                request.then(setGroup(group.filter(sub => sub._id !== person._id)))\r\n        }\r\n        //Kysytään käyttäjältä haluaako hän poistaa yhteystiedon ja \r\n        //jos haluaa, niin yhteystieto poistetaan\r\n        const confirmNeutralization = () => {\r\n                const message = `Poistetaanko ${target.name}?`\r\n                const result = window.confirm(message)\r\n                if (result) {\r\n                        neutralizeTarget(target, group, setGroup)\r\n                        messager(`Henkilö ${target.name} poistettu onnistuneesti`)\r\n                }\r\n        }\r\n        return (\r\n                <div>\r\n                {person.name} {person.number}\r\n                <button type=\"button\" onClick={confirmNeutralization}>poista</button>\r\n                </div>\r\n        )\r\n}\r\n        \r\nexport default Person","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Numbers = ({persons, setPersons, messager}) => {\r\n    //Saaduista henkilöistä muodostetaan html-koodia Person-komponentin ja map-funktion avulla\r\n    const contacts = () => persons.map(person => \r\n                <Person \r\n                key={person.name} \r\n                person={person} \r\n                group={persons} \r\n                setGroup={setPersons}\r\n                messager={messager}/>\r\n            )\r\n    return(\r\n        <div>\r\n            <p>{contacts()}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Numbers","import React from 'react'\r\n\r\nconst NameInput = ({newName, handleNameChange}) => {\r\n    return (\r\n        <div>\r\n          nimi: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NameInput","import React from 'react'\r\n\r\nconst NumberInput = ({newNumber, handleNumberChange}) => {\r\n    return (\r\n        <div>\r\n          numero: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberInput","import React from 'react';\r\nimport NameInput from './NameInput'\r\nimport NumberInput from './NumberInput'\r\n\r\nconst PersonForm = ({addContact, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <div>\r\n        <form onSubmit={addContact}>\r\n        <NameInput newName={newName} handleNameChange={handleNameChange} />\r\n        <NumberInput newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n        <div>\r\n          <button type=\"submit\">lisää</button>\r\n        </div>\r\n        </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({targetName, handleNameChange}) => {\r\n    return (\r\n    <div>\r\n        <div>rajaa näytettäviä nimen perusteella: <input value={targetName} onChange={handleNameChange}/></div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Message = ({message}) => {\r\n    if (message) {\r\n        const messageStyle = {\r\n            color: 'green',\r\n            background: 'lightgrey',\r\n            fontSize: 20,\r\n            borderStyle: 'solid',\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            marginBottom: 10\r\n        }\r\n        return(\r\n            <div style={messageStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import React from 'react';\r\n\r\nconst ErrorMessage = ({message}) => {\r\n    if (message) {\r\n        const errorStyle = {\r\n            color: 'red',\r\n            background: 'lightgrey',\r\n            fontSize: 20,\r\n            borderStyle: 'solid',\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            marginBottom: 10\r\n        }\r\n        return(\r\n            <div style={errorStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage","import React, {useState, useEffect} from 'react';\nimport Numbers from './components/Numbers'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport NoteService from './components/SpecialNoteService'\nimport axios from 'axios'\nimport Message from './components/Message'\nimport ErrorMessage from './components/ErrorMessage'\n\n\nconst App = () => {\n  //Henkilöt\n  const [persons, setPersons] = useState([])\n  //Henkilötiedot haetaan serveriltä\n  useEffect(() => {\n    axios\n      .get('/api/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n  \n  //Uusi henkilö, sekä uuden henkilön tila (tekstikenttä)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [targetName, setTargetName] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [message, setMessage] = useState('')\n\n  //Kun lisää-nappia painetaan vaihtaa setNewName newName:n tilan arvon (event.target.value), jotta \n  //tapahtumankäsittelijä addContact voi lisätä uuden henkilön puhelinluetteloon\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  //Kun lisää-nappia painetaan vaihtaa setNewNumber newNumber:n tilan arvoksi (event.target.value), jotta\n  //tapahtumankäsittelijä addContanct voi lisätä uuden henkilön puhelinluetteloon\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  //Kun nimien rajaus -kenttään syötetään tekstiä rajataan henkilöitä annetun kohde-\n  //merkkijonon perusteella\n  const handleTargetChange = (event) => {\n    setTargetName(event.target.value)\n  }\n  //Näytetään viesti kolmen sekunnin ajan\n  const displayMessage = (message) => {\n    setMessage(\n      `${message}`\n    )\n    setTimeout(() => setMessage(''), 3000)\n  }\n  //Näytetään virheviesti kolmen sekunnin ajan\n  const displayErrorMessage = (message) => {\n    setErrorMessage(\n      `${message}`\n    )\n    setTimeout(() => {\n      setErrorMessage('')}, 3000)\n  }\n\n  //Rajaa henkilöitä annetun kohdenimen mukaan\n  //Jos kohdenimi on tyhjä, eli käyttäjä ei ole antanut tekstikenttään syötettä\n  //niin palautetaan kaikki nimet\n  const personsToShow = () => {\n    if (targetName) {\n      //Otetaan ne henkilöt, joiden nimissä esiintyy kohdenimi\n      const names = persons.filter(person => (person.name.toLowerCase().includes(targetName.toLowerCase())))\n      return names\n    }\n    else {\n      return persons\n    }\n  }\n \n  //Uuden henkilön lisäys henkilöihin, sekä tekstikenttien resetointi\n  //Uuden henkilön nimen arvo on tilan newName arvo ja puhelinnumeron arvo\n  //on newNumber:n arvo\n  const addContact = (event) => {\n    event.preventDefault()\n    //Tarkastetaan onko lisättävä nimi jo luettelossa\n    if (persons.map(person => person.name).includes(newName)) {\n      const message = `${newName} on jo luettelossa, korvataanko vanha numero uudella?`\n      //Result arvoksi määräytyy tosi/epätosi\n      const result  = window.confirm(message)\n      const target  = persons.filter(person => person.name === newName)[0]\n      if (result) {\n        //Luodaan päivitettävä henkilö\n        //Serveri muuttaa päivitettävän henkilön tietoja ja palauttaa kyseisen henkilön\n        const changedPerson = {...target, number: newNumber}\n        const request = NoteService.update(changedPerson._id, changedPerson)\n        request.then(data => {\n          setPersons(persons.map(person => person._id === target._id ? data : person))\n          displayMessage(`Henkilö ${target.name} päivitetty onnistuneesti`)\n        }).catch(error => {\n          displayErrorMessage(error.response.data.error)})\n      setNewName('')\n      setNewNumber('')\n      }\n    }\n    //Jos nimi ei jo ole luettelossa, niin se lisätään sinne\n    else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n      //Henkilö lisätään funktionaaliseen tyyliin ja tekstikenttä resetoidaan alla\n      const request = NoteService.create(nameObject)\n      request.then(data => {\n        setPersons(persons.concat(data))\n        displayMessage(`Henkilö ${newName} lisätty onnistunesti`)})\n        .catch(error => {\n          displayErrorMessage(error.response.data.error)})\n      setNewName('');\n      setNewNumber('');\n    }\n  }\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Message message={message}/>\n      <ErrorMessage message={errorMessage}/>\n      <Filter targetName={targetName} handleNameChange={handleTargetChange}/> \n      <h2>lisää uusi</h2>\n      <PersonForm addContact={addContact} \n      newName={newName} \n      handleNameChange={handleNameChange} \n      newNumber={newNumber}\n      handleNumberChange={handleNumberChange}/>\n      <h2>Numerot</h2>\n      <Numbers persons={personsToShow(targetName)} setPersons={setPersons} messager={displayMessage} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}