{"version":3,"sources":["components/SpecialNoteService.js","components/Person.js","components/Numbers.js","components/NameInput.js","components/NumberInput.js","components/PersonForm.js","components/Filter.js","components/Message.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseURL","SpecialNoteService","id","noteObject","axios","put","concat","then","response","data","newObject","post","delete","Person","_ref","person","group","setGroup","messager","console","log","_useState","useState","target","Object","slicedToArray","react_default","a","createElement","name","number","type","onClick","message","window","confirm","NoteService","filter","sub","neutralizeTarget","Numbers","persons","setPersons","map","components_Person","key","NameInput","newName","handleNameChange","value","onChange","NumberInput","newNumber","handleNumberChange","PersonForm","addContact","onSubmit","components_NameInput","components_NumberInput","Filter","targetName","handleTargetChange","Message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorMessage","App","_useState2","useEffect","get","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setTargetName","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setMessage","displayMessage","setTimeout","components_Message","components_ErrorMessage","components_Filter","event","components_PersonForm","preventDefault","includes","result","changedPerson","objectSpread","catch","error","components_Numbers","personsToShow","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.07f5b797.chunk.js","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n//Haetaan kaikki yhteystiedot\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n//Päivitetään yhteystietoja\r\nconst update = (id, noteObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, noteObject)\r\n    return request.then(response => response.data)\r\n}\r\n//Luodaan uusi yhteystieto\r\nconst create = newObject => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n//Poistetaan yhteystieto\r\nconst neutralize = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, update, create, neutralize}\r\n","import React, {useState} from 'react';\r\nimport NoteService from './SpecialNoteService'\r\nconst Person = ({person, group, setGroup, messager}) => {\r\n        console.log(\"Uuden henkilön luonti on aloitettu komponentissa Person\")\r\n        //Asetetaan yhteystiedon henkilön tila\r\n        const [target] = useState(person)\r\n        //Voidaan poistaa yhteystieto, kun käyttäjä painaa nappia\r\n        const neutralizeTarget = (person, group, setGroup) => {\r\n                const request = NoteService.neutralize(target.id)\r\n                request.then(setGroup(group.filter(sub => sub.id !== person.id)))\r\n        }\r\n        //Kysytään käyttäjältä haluaako hän poistaa yhteystiedon ja \r\n        //jos haluaa, niin yhteystieto poistetaan\r\n        const confirmNeutralization = () => {\r\n                const message = `Poistetaanko ${target.name}?`\r\n                const result = window.confirm(message)\r\n                if (result) {\r\n                        neutralizeTarget(target, group, setGroup)\r\n                        messager(`Henkilö ${target.name} poistettu onnistuneesti`)\r\n                }\r\n        }\r\n        console.log(\"Uusi henkilö on luotu\")\r\n        return (\r\n                <div>\r\n                {person.name} {person.number}\r\n                <button type=\"button\" onClick={confirmNeutralization}>poista</button>\r\n                </div>\r\n        )\r\n}\r\n        \r\nexport default Person","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Numbers = ({persons, setPersons, messager}) => {\r\n    //Saaduista henkilöistä muodostetaan html-koodia Person-komponentin ja map-funktion avulla\r\n    const contacts = () => persons.map(person => \r\n                //console.log(\"Uuden henkilön luonti on aloitettu\") \r\n                <Person \r\n                key={person.name} \r\n                person={person} \r\n                group={persons} \r\n                setGroup={setPersons}\r\n                messager={messager}/>\r\n            )\r\n    return(\r\n        <div>\r\n            <p>{contacts()}</p>\r\n            <p>Täällä tapahtuu kummallisuuksia</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Numbers","import React from 'react'\r\n\r\nconst NameInput = ({newName, handleNameChange}) => {\r\n    return (\r\n        <div>\r\n          nimi: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NameInput","import React from 'react'\r\n\r\nconst NumberInput = ({newNumber, handleNumberChange}) => {\r\n    return (\r\n        <div>\r\n          numero: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberInput","import React from 'react';\r\nimport NameInput from './NameInput'\r\nimport NumberInput from './NumberInput'\r\n\r\nconst PersonForm = ({addContact, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <div>\r\n        <form onSubmit={addContact}>\r\n        <NameInput newName={newName} handleNameChange={handleNameChange} />\r\n        <NumberInput newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n        <div>\r\n          <button type=\"submit\">lisää</button>\r\n        </div>\r\n        </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({targetName, handleTargetChange}) => {\r\n    return (\r\n    <div>\r\n        rajaa näytettäviä: <input value={targetName} onChange={handleTargetChange}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Message = ({message}) => {\r\n    if (message) {\r\n        const messageStyle = {\r\n            color: 'green',\r\n            background: 'lightgrey',\r\n            fontSize: 20,\r\n            borderStyle: 'solid',\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            marginBottom: 10\r\n        }\r\n        return(\r\n            <div style={messageStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import React from 'react';\r\n\r\nconst ErrorMessage = ({message}) => {\r\n    if (message) {\r\n        const errorStyle = {\r\n            color: 'red',\r\n            background: 'lightgrey',\r\n            fontSize: 20,\r\n            borderStyle: 'solid',\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            marginBottom: 10\r\n        }\r\n        return(\r\n            <div style={errorStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage","import React, {useState, useEffect} from 'react';\nimport Numbers from './components/Numbers'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport NoteService from './components/SpecialNoteService'\nimport axios from 'axios'\nimport Message from './components/Message'\nimport ErrorMessage from './components/ErrorMessage'\n//import SpecialNoteService from './components/SpecialNoteService';\n\n\nconst App = () => {\n  //Henkilöt\n  const [persons, setPersons] = useState([])\n  //Henkilötiedot haetaan serveriltä\n  useEffect(() => {\n    axios\n      .get('/api/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n/* useEffect(() => {\n   const temp = SpecialNoteService.getAll()\n   temp.then(data => {\n     console.log(data)\n     setPersons(data)\n   })\n   //console.log(temp)\n   //setPersons(SpecialNoteService.getAll())\n }, [])\n */\n  \n  //Uusi henkilö, sekä uuden henkilön tila (tekstikenttä)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [targetName, setTargetName] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [message, setMessage] = useState('')\n\n  //Kun lisää-nappia painetaan vaihtaa setNewName newName:n tilan arvon (event.target.value), jotta \n  //tapahtumankäsittelijä addContact voi lisätä uuden henkilön puhelinluetteloon\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  //Kun lisää-nappia painetaan vaihtaa setNewNumber newNumber:n tilan arvoksi (event.target.value), jotta\n  //tapahtumankäsittelijä addContanct voi lisätä uuden henkilön puhelinluetteloon\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  //Kun nimien rajaus -kenttään syötetään tekstiä rajataan henkilöitä annetun kohde-\n  //merkkijonon perusteella\n  const handleTargetChange = (event) => {\n    setTargetName(event.target.value)\n  }\n  //Näytetään viesti kolmen sekunnin ajan\n  const displayMessage = (message) => {\n    setMessage(\n      `${message}`\n    )\n    setTimeout(() => {setMessage('')}, 3000)\n  }\n  //Näytetään virheviesti kolmen sekunnin ajan\n  const displayErrorMessage = (message) => {\n    setErrorMessage(\n      `${message}`\n    )\n    setTimeout(() => {setMessage('')}, 3000)\n  }\n\n  //Rajaa henkilöitä annetun kohdenimen mukaan\n  //Jos kohdenimi on tyhjä, eli käyttäjä ei ole antanut tekstikenttään syötettä\n  //niin palautetaan kaikki nimet\n  const personsToShow = (targetName) => {\n    if (targetName) {\n      const value = persons.filter(person => person.name.includes(targetName))\n      console.log(\"personsToShow palauttaa\", value)\n      return value\n    }\n    else {\n      console.log(\"personsToShow palauttaa\", persons)\n      return persons\n    }\n  }\n  //Uuden henkilön lisäys henkilöihin, sekä tekstikenttien resetointi\n  //Uuden henkilön nimen arvo on tilan newName arvo ja puhelinnumeron arvo\n  //on newNumber:n arvo\n  const addContact = (event) => {\n    event.preventDefault()\n    //Tarkastetaan onko lisättävä nimi jo luettelossa\n    if (persons.map(person => person.name).includes(newName)) {\n      const message = `${newName} on jo luettelossa, korvataanko vanha numero uudella?`\n      //Result arvoksi määräytyy tosi/epätosi\n      const result  = window.confirm(message)\n      const target  = persons.filter(person => person.name === newName)[0]\n      if (result) {\n        //Luodaan lisättävä henkilö\n        const changedPerson = {...target, number: newNumber}\n        const request = NoteService.update(changedPerson.id, changedPerson)\n        request.then(data => {\n          setPersons(persons.map(person => person.id === target.id ? data : person))\n          displayMessage(`Henkilö ${target.name} päivitetty onnistuneesti`)\n        }).catch(error => {\n          displayErrorMessage(`Henkilö ${target.name} oli jo poistettu`)\n        })\n      }\n    }\n    //Jos nimi ei jo ole luettelossa, niin se lisätään sinne\n    else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n      const request = NoteService.create(nameObject)\n      request.then(data => setPersons(persons.concat(data)))\n      //Henkilö lisätään funktionaaliseen tyyliin ja tekstikenttä resetoidaan alla\n      displayMessage(`Henkilö ${newName} lisätty onnistunesti`)\n      setNewName('');\n      setNewNumber('');\n    }\n  }\n  //console.log(persons)\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Message message={message}/>\n      <ErrorMessage message={errorMessage}/>\n      <Filter targetName={targetName} handleTargetChange={handleTargetChange} /> \n      <h2>lisää uusi</h2>\n      <PersonForm addContact={addContact} \n      newName={newName} \n      handleNameChange={handleNameChange} \n      newNumber={newNumber}\n      handleNumberChange={handleNumberChange}/>\n      <h2>Numerot</h2>\n      <Numbers persons={personsToShow(targetName)} setPersons={setPersons} messager={displayMessage} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}